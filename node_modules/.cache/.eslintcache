[{"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\index.tsx":"1","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\App.tsx":"2","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\styles\\global.ts":"3","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Header\\index.tsx":"4","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Header\\styles.ts":"5","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\services\\api.ts":"6","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\NewTransactionModal\\index.tsx":"7","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Dashboard\\index.tsx":"8","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Dashboard\\styles.ts":"9","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Summary\\index.tsx":"10","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Summary\\styles.ts":"11","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\TransactionsTable\\index.tsx":"12","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\TransactionsTable\\styles1.ts":"13","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\NewTransactionModal\\styles.ts":"14","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\hooks\\useTransactions.tsx":"15"},{"size":1040,"mtime":1641327189644,"results":"16","hashOfConfig":"17"},{"size":1000,"mtime":1641421938350,"results":"18","hashOfConfig":"17"},{"size":1603,"mtime":1641233136261,"results":"19","hashOfConfig":"17"},{"size":522,"mtime":1640717081579,"results":"20","hashOfConfig":"17"},{"size":559,"mtime":1640717081620,"results":"21","hashOfConfig":"17"},{"size":109,"mtime":1640565079302,"results":"22","hashOfConfig":"17"},{"size":3452,"mtime":1641433476843,"results":"23","hashOfConfig":"17"},{"size":284,"mtime":1640717378328,"results":"24","hashOfConfig":"17"},{"size":147,"mtime":1639588772854,"results":"25","hashOfConfig":"17"},{"size":2251,"mtime":1641433347892,"results":"26","hashOfConfig":"17"},{"size":617,"mtime":1641423882924,"results":"27","hashOfConfig":"17"},{"size":1500,"mtime":1641423628013,"results":"28","hashOfConfig":"17"},{"size":728,"mtime":1640717522029,"results":"29","hashOfConfig":"17"},{"size":1878,"mtime":1641251110162,"results":"30","hashOfConfig":"17"},{"size":1773,"mtime":1641421971917,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1y8ezuy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\index.tsx",[],["65","66"],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\App.tsx",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\styles\\global.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Header\\index.tsx",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Header\\styles.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\services\\api.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\NewTransactionModal\\index.tsx",["67"],"import { FormEvent, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport {api} from '../../services/api';\r\n\r\nimport incomeImg from '../../assets/income.svg';\r\nimport outcomeImg from '../../assets/outcome.svg';\r\nimport closeImg from '../../assets/close.svg';\r\n\r\nimport { Container, TransactionTypeContainer, RadioBox } from './styles';\r\nimport { useTransactions } from '../../hooks/useTransactions';\r\n\r\ninterface NewTransactionModalProps {\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\nexport function NewTransactionModal({ isOpen, onRequestClose }: NewTransactionModalProps) {\r\n\r\n    const { createTransaction }= useTransactions();\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const [category, setCategory] = useState('')\r\n    const [type, setType] = useState('deposit');\r\n\r\n    async function handleCreateNewTransaction(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        await createTransaction({\r\n            title,\r\n            amount,\r\n            category,\r\n            type,\r\n        })\r\n\r\n        setTitle('');\r\n        setAmount(0);\r\n        setCategory('');\r\n        setType('deposit');\r\n\r\n\r\n       onRequestClose();\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={isOpen}\r\n            onRequestClose={onRequestClose}\r\n            overlayClassName=\"react-modal-overlay\"\r\n            className=\"react-modal-content\"\r\n        >\r\n\r\n            <button type=\"button\"\r\n                onClick={onRequestClose}\r\n                className=\"react-modal-close\">\r\n                <img src={closeImg} alt=\"Fechar modal\" />\r\n            </button>\r\n            <Container onSubmit={handleCreateNewTransaction}>\r\n                <h2>Cadastrar transação</h2>\r\n\r\n                <input\r\n                    placeholder=\"Título\"\r\n                    value={title}\r\n                    onChange={event => setTitle(event.target.value)}\r\n\r\n\r\n                />\r\n\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"valor\"\r\n                    value={amount}\r\n                    onChange={event => setAmount(Number(event.target.value))}\r\n\r\n                />\r\n\r\n                <TransactionTypeContainer>\r\n                    <RadioBox\r\n                        type=\"button\"\r\n                        onClick={() => { setType('deposit'); }}\r\n                        isActive={type === 'deposit'}\r\n                        activeColor=\"green\"\r\n                    >\r\n                        <img src={incomeImg} alt=\"Entrada\" />\r\n                        <span>Entrada</span>\r\n                    </RadioBox>\r\n\r\n                    <RadioBox\r\n                        type=\"button\"\r\n                        onClick={() => { setType('withdraw'); }}\r\n                        isActive={type === 'withdraw'}\r\n                        activeColor=\"red\"\r\n                    >\r\n                        <img src={outcomeImg} alt=\"Saída\" />\r\n                        <span>Saída</span>\r\n                    </RadioBox>\r\n                </TransactionTypeContainer>\r\n\r\n                <input\r\n                    placeholder=\"Categoria\"\r\n                    value={category}\r\n                    onChange={event => setCategory(event.target.value)}\r\n                />\r\n                <button type=\"submit\">\r\n                    Cadastrar\r\n                </button>\r\n\r\n            </Container>\r\n\r\n        </Modal>\r\n\r\n    )\r\n}","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Dashboard\\index.tsx",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Dashboard\\styles.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Summary\\index.tsx",["68","69"],"import React, { useContext } from 'react';\r\nimport incomeImg from '../../assets/income.svg'\r\nimport outcomeImg from '../../assets/outcome.svg';\r\nimport totalImg from '../../assets/total.svg';\r\nimport { useTransactions} from '../../hooks/useTransactions';\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Summary() {\r\n\r\n    const { transactions } = useTransactions()\r\n\r\n    const summary = transactions.reduce((acc, transaction) => {\r\n        if (transaction.type == 'deposit') {\r\n            acc.deposits += transaction.amount;\r\n            acc.total += transaction.amount;\r\n        } else {\r\n            acc.withdraws += transaction.amount;\r\n            acc.total -= transaction.amount;\r\n        }\r\n\r\n        return acc;\r\n\r\n    }, {\r\n        deposits: 0,\r\n        withdraws: 0,\r\n        total: 0,\r\n    })\r\n\r\n\r\n\r\n    console.log(transactions);\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <header>\r\n                    <p>Entradas</p>\r\n                    <img src={incomeImg} alt=\"Entradas\" />\r\n                </header>\r\n                <strong>\r\n                    {new Intl.NumberFormat('pt-BR', {\r\n                        style: 'currency',\r\n                        currency: 'BRL'\r\n                    }).format(summary.deposits)}\r\n\r\n                </strong>\r\n            </div>\r\n\r\n            <div>\r\n                <header>\r\n                    <p>Saídas</p>\r\n                    <img src={outcomeImg} alt=\"Saídas\" />\r\n                </header>\r\n                <strong>\r\n                    -{new Intl.NumberFormat('pt-BR', {\r\n                        style: 'currency',\r\n                        currency: 'BRL'\r\n                    }).format(summary.withdraws)}\r\n\r\n                </strong>\r\n            </div>\r\n\r\n            <div className=\"highlight-background\">\r\n                <header>\r\n                    <p>Total</p>\r\n                    <img src={totalImg} alt=\"Total\" />\r\n                </header>\r\n                <strong>\r\n                    {new Intl.NumberFormat('pt-BR', {\r\n                        style: 'currency',\r\n                        currency: 'BRL'\r\n                    }).format(summary.total)}\r\n                </strong>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\Summary\\styles.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\TransactionsTable\\index.tsx",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\TransactionsTable\\styles1.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\components\\NewTransactionModal\\styles.ts",[],"C:\\Users\\flavi\\Desktop\\rocketseat\\dtmoney\\src\\hooks\\useTransactions.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":9,"nodeType":"76","messageId":"77","endLine":3,"endColumn":12},{"ruleId":"74","severity":1,"message":"78","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":14,"column":30,"nodeType":"81","messageId":"82","endLine":14,"endColumn":32},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]